namespace MentorLake.Gtk4.GObject;

public static class Constants
{
	public const int G_TYPE_FUNDAMENTAL_MAX = 255 << 2;
	public const nuint G_TYPE_INVALID = 0 << 2;
	public const nuint G_TYPE_NONE = 1 << 2;
	public const nuint G_TYPE_INTERFACE = 2 << 2;
	public const nuint G_TYPE_CHAR = 3 << 2;
	public const nuint G_TYPE_UCHAR = 4 << 2;
	public const nuint G_TYPE_BOOLEAN = 5 << 2;
	public const nuint G_TYPE_INT = 6 << 2;
	public const nuint G_TYPE_UINT = 7 << 2;
	public const nuint G_TYPE_LONG = 8 << 2;
	public const nuint G_TYPE_ULONG = 9 << 2;
	public const nuint G_TYPE_INT64 = 10 << 2;
	public const nuint G_TYPE_UINT64 = 11 << 2;
	public const nuint G_TYPE_ENUM = 12 << 2;
	public const nuint G_TYPE_FLAGS = 13 << 2;
	public const nuint G_TYPE_FLOAT = 14 << 2;
	public const nuint G_TYPE_DOUBLE = 15 << 2;
	public const nuint G_TYPE_STRING = 16 << 2;
	public const nuint G_TYPE_POINTER = 17 << 2;
	public const nuint G_TYPE_BOXED = 18 << 2;
	public const nuint G_TYPE_PARAM = 19 << 2;
	public const nuint G_TYPE_OBJECT = 20 << 2;
	public const nuint G_TYPE_VARIANT = 21 << 2;
	public const int G_TYPE_FUNDAMENTAL_SHIFT = 2;
	public const int G_TYPE_RESERVED_GLIB_FIRST = 22;
	public const int G_TYPE_RESERVED_GLIB_LAST = 31;
	public const int G_TYPE_RESERVED_BSE_FIRST = 32;
	public const int G_TYPE_RESERVED_BSE_LAST = 48;
	public const int G_TYPE_RESERVED_USER_FIRST = 49;
	public const nuint G_TYPE_FLAG_RESERVED_ID_BIT = 1 << 0;
	public const int G_VALUE_NOCOPY_CONTENTS = 1 << 27;
	public const int G_VALUE_INTERNED_STRING = 1 << 28;
	public const int G_PARAM_STATIC_STRINGS = (int)GParamFlags.G_PARAM_STATIC_NAME | (int)GParamFlags.G_PARAM_STATIC_NICK | (int)GParamFlags.G_PARAM_STATIC_BLURB;
	public const int G_PARAM_MASK = 0x000000ff;
	public const int G_PARAM_USER_SHIFT = 8;
	public const int G_SIGNAL_FLAGS_MASK = 0x1ff;
	public const int G_SIGNAL_MATCH_MASK = 0x3f;
	public const nuint G_SIGNAL_TYPE_STATIC_SCOPE = 1 << 0;
	public static nuint G_TYPE_DATE => Methods.g_date_get_type();
	public static nuint G_TYPE_STRV => Methods.g_strv_get_type();
	public static nuint G_TYPE_GSTRING => Methods.g_gstring_get_type();
	public static nuint G_TYPE_HASH_TABLE => Methods.g_hash_table_get_type();
	public static nuint G_TYPE_REGEX => Methods.g_regex_get_type();
	public static nuint G_TYPE_MATCH_INFO => Methods.g_match_info_get_type();
	public static nuint G_TYPE_ARRAY => Methods.g_array_get_type();
	public static nuint G_TYPE_BYTE_ARRAY => Methods.g_byte_array_get_type();
	public static nuint G_TYPE_PTR_ARRAY => Methods.g_ptr_array_get_type();
	public static nuint G_TYPE_BYTES => Methods.g_bytes_get_type();
	public static nuint G_TYPE_VARIANT_TYPE => Methods.g_variant_type_get_gtype();
	public static nuint G_TYPE_ERROR => Methods.g_error_get_type();
	public static nuint G_TYPE_DATE_TIME => Methods.g_date_time_get_type();
	public static nuint G_TYPE_TIME_ZONE => Methods.g_time_zone_get_type();
	public static nuint G_TYPE_IO_CHANNEL => Methods.g_io_channel_get_type();
	public static nuint G_TYPE_IO_CONDITION => Methods.g_io_condition_get_type();
	public static nuint G_TYPE_VARIANT_BUILDER => Methods.g_variant_builder_get_type();
	public static nuint G_TYPE_VARIANT_DICT => Methods.g_variant_dict_get_type();
	public static nuint G_TYPE_MAIN_LOOP => Methods.g_main_loop_get_type();
	public static nuint G_TYPE_MAIN_CONTEXT => Methods.g_main_context_get_type();
	public static nuint G_TYPE_SOURCE => Methods.g_source_get_type();
	public static nuint G_TYPE_POLLFD => Methods.g_pollfd_get_type();
	public static nuint G_TYPE_MARKUP_PARSE_CONTEXT => Methods.g_markup_parse_context_get_type();
	public static nuint G_TYPE_KEY_FILE => Methods.g_key_file_get_type();
	public static nuint G_TYPE_MAPPED_FILE => Methods.g_mapped_file_get_type();
	public static nuint G_TYPE_THREAD => Methods.g_thread_get_type();
	public static nuint G_TYPE_CHECKSUM => Methods.g_checksum_get_type();
	public static nuint G_TYPE_OPTION_GROUP => Methods.g_option_group_get_type();
	public static nuint G_TYPE_URI => Methods.g_uri_get_type();
	public static nuint G_TYPE_TREE => Methods.g_tree_get_type();
	public static nuint G_TYPE_PATTERN_SPEC => Methods.g_pattern_spec_get_type();
	public static nuint G_TYPE_CLOSURE => Methods.g_closure_get_type();
	public static nuint G_TYPE_VALUE => Methods.g_value_get_type();
	public static nuint G_TYPE_INITIALLY_UNOWNED => Methods.g_initially_unowned_get_type();
	public static nuint G_TYPE_BINDING_FLAGS => Methods.g_binding_flags_get_type();
	public static nuint G_TYPE_BINDING => Methods.g_binding_get_type();
	public static nuint G_TYPE_BINDING_GROUP => Methods.g_binding_group_get_type();
}
